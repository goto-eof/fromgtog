name: Create Linux ARM64 DEB file

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build_jar:
    name: Build JAR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure JDK (Linux)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build JAR with Maven
        run: mvn clean package

      - name: Upload Artifact (JAR and resources)
        uses: actions/upload-artifact@v4
        with:
          name: application-files
          path: |
            target/fromgtog.jar
            resources/

  create_linux_packages:
    name: Package Linux ARM64 DEB
    runs-on: ubuntu-latest
    needs: build_jar
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        # Definisce UNICA architettura target: ARM64
        arch: [arm64]
        deb-arch-label: [arm64]
        include:
          - arch: arm64
            deb-arch-label: arm64
            java-runtime-arch: aarch64

    steps:
      - uses: actions/checkout@v4

      - name: Define release version
        id: set_version
        run: |
          echo "RELEASE_TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "Release Tag set on: ${GITHUB_REF_NAME}"

      - name: Download Artifact (JAR and resources)
        uses: actions/download-artifact@v4
        with:
          name: application-files
          path: downloaded-files

      # PASSO 1: Configura la JDK HOST (AMD64) che contiene l'eseguibile jpackage nativo
      - name: Configure HOST JDK (x64) for jpackage execution
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          architecture: x64 # Sempre x64 per l'host Ubuntu

      # PASSO 2: Scarica la JRE/Runtime TARGET (aarch64). Questo passo è sempre eseguito
      - name: Download TARGET JRE for Cross-Compilation
        id: download_jre
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          architecture: ${{ matrix.java-runtime-arch }} # Scarica aarch64
          check-latest: true

      - name: Install required dependencies for jpackage
        run: |
          sudo apt-get update
          sudo apt-get install -y fakeroot dpkg-dev

      - name: Create DEB package with jpackage (Cross-Build)
        run: |
          INPUT_PATH="downloaded-files/target"
          OUTPUT_PATH="executable"
          MAIN_JAR="fromgtog.jar"
          ICON_PATH="downloaded-files/resources/icon-linux.png"

          # Determina il percorso della runtime, che punta alla JRE TARGET (aarch64)
          # Questa logica ora si applica sempre, poiché è una build ARM64
          JRE_PATH=$(echo $JRE_21_HOME | sed 's/\(.*\)\/bin\//\1/')
          RUNTIME_IMAGE_ARG="--runtime-image $JRE_PATH"
          echo "Using cross-runtime: $JRE_PATH"

          jpackage \
            --input "$INPUT_PATH" \
            --dest "$OUTPUT_PATH" \
            --name "FromGtoG" \
            --vendor "Andrei Dodu" \
            --app-version "$RELEASE_TAG" \
            --main-jar "$MAIN_JAR" \
            --main-class com.andreidodu.fromgtog.Main \
            --icon "$ICON_PATH" \
            --type deb \
            --linux-shortcut \
            --linux-arch "arm64" \
            $RUNTIME_IMAGE_ARG \
            --java-options "-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true" \
            --add-modules java.base,java.desktop,java.net.http,java.naming,java.sql,java.management,java.security.jgss,java.xml,java.logging,jdk.crypto.ec,java.security.sasl \
            --verbose

      - name: Zip DEB file
        run: |
          DEB_FILE=$(find executable -name "*.deb")
          FINAL_DEB_NAME="fromgtog_${RELEASE_TAG}_${{ matrix.deb-arch-label }}.deb"
          mv "$DEB_FILE" "$FINAL_DEB_NAME"

          ZIP_NAME="${{ github.event.repository.name }}-Linux-${{ github.ref_name }}-arm64-Installer.zip"
          zip -j "$ZIP_NAME" "$FINAL_DEB_NAME"

      - name: Release Linux Artifacts
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ github.event.repository.name }}-Linux-${{ github.ref_name }}-arm64-Installer.zip
